```java
package com.example.lws.repository;

import com.example.lws.models.Book;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;

import static org.assertj.core.api.Assertions.assertThat;

@DataJpaTest
public class BookRepositoryTest {

    @Autowired
    private BookRepository bookRepository;

    @Test
    void shouldSaveBook() {
        // given
        Book book = Book.builder()
                .title("Spring Boot in Action")
                .author("Craig Walls")
                .build();

        // when
        Book savedBook = bookRepository.save(book);

        // then
        assertThat(savedBook).isNotNull();
        assertThat(savedBook.getId()).isGreaterThan(0);
        assertThat(savedBook.getTitle()).isEqualTo("Spring Boot in Action");
        assertThat(savedBook.getAuthor()).isEqualTo("Craig Walls");
    }

    @Test
    void shouldFindBookById() {
        // given
        Book book = Book.builder()
                .title("Spring Boot in Action")
                .author("Craig Walls")
                .build();
        Book savedBook = bookRepository.save(book);

        // when
        Book foundBook = bookRepository.findById(savedBook.getId()).get();

        // then
        assertThat(foundBook).isNotNull();
        assertThat(foundBook.getId()).isEqualTo(savedBook.getId());
        assertThat(foundBook.getTitle()).isEqualTo("Spring Boot in Action");
        assertThat(foundBook.getAuthor()).isEqualTo("Craig Walls");
    }

    @Test
    void shouldDeleteBookById() {
        // given
        Book book = Book.builder()
                .title("Spring Boot in Action")
                .author("Craig Walls")
                .build();
        Book savedBook = bookRepository.save(book);

        // when
        bookRepository.deleteById(savedBook.getId());

        // then
        assertThat(bookRepository.findById(savedBook.getId()).isEmpty()).isTrue();
    }
}
```