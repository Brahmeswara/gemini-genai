```java
package com.example.lws.models;

import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.junit.jupiter.MockitoExtension;

@ExtendWith(MockitoExtension.class)
class BookTest {

    @Test
    void should_return_default_values() {
        Book book = Book.builder().build();
        assertEquals(null, book.getId());
        assertEquals(null, book.getTitle());
        assertEquals(null, book.getAuthor());
        assertEquals(null, book.getPublisher());
        assertEquals(null, book.getYearOfPublication());
        assertEquals(null, book.getIsbn());
        assertEquals(null, book.getPrice());
        assertEquals(null, book.getQuantityInStock());
        assertEquals(null, book.getQuantityAvailable());
    }

    @Test
    void should_return_set_values() {
        Book book = Book.builder()
                .id(1L)
                .title("Title")
                .author("Author")
                .publisher(new Publisher())
                .yearOfPublication(2023)
                .isbn("ISBN")
                .price(BigDecimal.TEN)
                .quantityInStock(10)
                .quantityAvailable(10)
                .build();
        assertEquals(1L, book.getId());
        assertEquals("Title", book.getTitle());
        assertEquals("Author", book.getAuthor());
        assertEquals(new Publisher(), book.getPublisher());
        assertEquals(2023, book.getYearOfPublication());
        assertEquals("ISBN", book.getIsbn());
        assertEquals(BigDecimal.TEN, book.getPrice());
        assertEquals(10, book.getQuantityInStock());
        assertEquals(10, book.getQuantityAvailable());
    }
}
```