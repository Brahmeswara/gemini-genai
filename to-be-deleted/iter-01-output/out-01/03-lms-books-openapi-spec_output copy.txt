```
openapi: 3.0.1
info:
  title: Library Management System API
  version: 1.0.0
  description: This API provides CRUD operations for books in a library management system.
servers:
  - url: https://lms.com/books
    description: Production environment
  - url: https://qa.lms.com/books
    description: QA environment
paths:
  /books:
    get:
      summary: Get a list of all books
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /books/{title}:
    get:
      summary: Get a book by title
      parameters:
        - name: title
          in: path
          required: true
          description: The title of the book to get
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Not Found
    put:
      summary: Update a book by title
      parameters:
        - name: title
          in: path
          required: true
          description: The title of the book to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Not Found
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        title:
          type: string
          minLength: 1
          maxLength: 255
        author:
          type: string
          minLength: 1
          maxLength: 255
        publisher:
          type: integer
          format: int64
        "year-of-publication":
          type: integer
          format: int32
          minimum: 1000
          maximum: 9999
        isbn:
          type: string
          pattern: ^\d{13}$
        price:
          type: number
          format: double
          minimum: 0.0
        "quantity-in-stock":
          type: integer
          format: int32
          minimum: 0
        "quantity-available":
          type: integer
          format: int32
          minimum: 0
```