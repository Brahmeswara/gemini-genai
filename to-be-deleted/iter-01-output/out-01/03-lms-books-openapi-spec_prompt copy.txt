Given the business entities and its attributes, generate an openapi spec for 
get list of all books
creating a new book
fetching an existing book by title.
Note: book name and title are used interchangably
editing an existing book

add validations and its error handling
use openapi spec 3.0.1

production url is https://lms.com/books
qa url is https://qa.lms.com/books
"""
-- Drop the tables if they already exist
DROP TABLE IF EXISTS RENTAL_TRANSACTIONS CASCADE;
DROP TABLE IF EXISTS CUSTOMERS CASCADE;
DROP TABLE IF EXISTS VENDORS CASCADE;
DROP TABLE IF EXISTS BOOKS CASCADE;
DROP TABLE IF EXISTS PUBLISHERS CASCADE;

-- Create the PUBLISHERS table
CREATE TABLE PUBLISHERS (
    ID INT PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    ADDRESS VARCHAR(255),
    PHONE VARCHAR(255),
    EMAIL VARCHAR(255)
);

-- Create the BOOKS table
CREATE TABLE BOOKS (
    ID INT PRIMARY KEY,
    TITLE VARCHAR(255) NOT NULL,
    AUTHOR VARCHAR(255),
    PUBLISHER INT REFERENCES PUBLISHERS(ID),
    "YEAR-OF-PUBLICATION" INT,
    ISBN VARCHAR(255) UNIQUE,
    PRICE DECIMAL(10, 2),
    "QUANTITY-IN-STOCK" INT DEFAULT 0,
    "QUANTITY-AVAILABLE" INT DEFAULT 0
);

-- Create the VENDORS table
CREATE TABLE VENDORS (
    ID INT PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    ADDRESS VARCHAR(255),
    PHONE VARCHAR(255),
    EMAIL VARCHAR(255)
);

-- Create the CUSTOMERS table
CREATE TABLE CUSTOMERS (
    ID INT PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    ADDRESS VARCHAR(255),
    PHONE VARCHAR(255),
    EMAIL VARCHAR(255) UNIQUE,
    "SUBSCRIPTION-AMOUNT" DECIMAL(10, 2),
    "SUBSCRIPTION-START-DATE" DATE,
    "SUBSCRIPTION-END-DATE" DATE
);

-- Create the RENTAL_TRANSACTIONS table
CREATE TABLE RENTAL_TRANSACTIONS (
    ID INT PRIMARY KEY,
    "CUSTOMER-ID" INT REFERENCES CUSTOMERS(ID),
    "BOOK-ID" INT REFERENCES BOOKS(ID),
    "RENTAL-DATE" DATE,
    "RETURN-DATE" DATE,
    "FINE-AMOUNT" DECIMAL(10, 2)
);
"""