```yaml
openapi: 3.0.1
info:
  title: Library Management System API
  version: 1.0.0
  description: This API provides access to the library management system.
  contact:
    email: support@lms.com
servers:
  - url: https://lms.com/books
    description: Production environment
  - url: https://qa.lms.com/books
    description: Quality assurance environment
paths:
  /books:
    get:
      summary: Get all books
      description: Returns a list of all books in the library.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Create a new book
      description: Creates a new book in the library.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /books/{title}:
    get:
      summary: Get a book by title
      description: Returns a single book by its title.
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        "404":
          description: Not Found
    put:
      summary: Edit a book
      description: Updates an existing book in the library.
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        "404":
          description: Not Found
components:
  schemas:
    Book:
      type: object
      required:
        - title
        - author
        - publisher
        - price
        - quantity_in_stock
        - quantity_available
      properties:
        id:
          type: integer
          description: The unique identifier of the book.
        title:
          type: string
          description: The title of the book.
          minLength: 1
          maxLength: 255
        author:
          type: string
          description: The author of the book.
          minLength: 1
          maxLength: 255
        publisher:
          type: integer
          description: The ID of the publisher of the book.
        year_of_publication:
          type: integer
          description: The year the book was published.
        isbn:
          type: string
          description: The ISBN of the book.
          minLength: 10
          maxLength: 13
        price:
          type: number
          description: The price of the book.
          minimum: 0.0
        quantity_in_stock:
          type: integer
          description: The quantity of the book in stock.
          minimum: 0
        quantity_available:
          type: integer
          description: The quantity of the book available for rent.
          minimum: 0
      example:
        title: The Iliad
        author: Homer
        publisher: 1
        year_of_publication: -800
        isbn: "9780140444445"
        price: 12.99
        quantity_in_stock: 20
        quantity_available: 15
"""