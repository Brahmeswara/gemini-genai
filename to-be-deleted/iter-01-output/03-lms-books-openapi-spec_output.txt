```yaml
openapi: 3.0.1
info:
  title: Book API
  version: 1.0.0
  description: API for managing books in a library
servers:
  - url: https://qa.lms.com/books
    description: QA Server
  - url: https://lms.com/books
    description: Production Server
paths:
  /books:
    get:
      tags:
        - Books
      summary: Get list of all books
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
      operationId: getAllBooks
    post:
      tags:
        - Books
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: createBook
  /books/{title}:
    get:
      tags:
        - Books
      summary: Get a book by title
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: getBookByTitle
    put:
      tags:
        - Books
      summary: Edit an existing book
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: editBook
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        title:
          type: string
          maxLength: 255
        author:
          type: string
          maxLength: 255
        publisher:
          type: integer
          format: int64
        yearOfPublication:
          type: integer
          format: int32
        isbn:
          type: string
          maxLength: 255
        price:
          type: number
          format: double
        quantityInStock:
          type: integer
          format: int32
        quantityAvailable:
          type: integer
          format: int32
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
```